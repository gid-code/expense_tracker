// Mocks generated by Mockito 5.4.4 from annotations
// in expense_tracker/test/providers/app_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:expense_tracker/models/auth_models.dart' as _i2;
import 'package:expense_tracker/models/expenditure_item.dart' as _i6;
import 'package:expense_tracker/models/income_item.dart' as _i5;
import 'package:expense_tracker/services/apiservice.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSignupResponse_1 extends _i1.SmartFake
    implements _i2.SignupResponse {
  _FakeSignupResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserProfile_2 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.LoginResponse> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.LoginResponse>.value(_FakeLoginResponse_0(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.LoginResponse>);

  @override
  _i4.Future<_i2.SignupResponse> signup(
    String? name,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            name,
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i2.SignupResponse>.value(_FakeSignupResponse_1(
          this,
          Invocation.method(
            #signup,
            [
              name,
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.SignupResponse>);

  @override
  _i4.Future<List<_i5.IncomeItem>> getIncome(String? accessToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIncome,
          [accessToken],
        ),
        returnValue: _i4.Future<List<_i5.IncomeItem>>.value(<_i5.IncomeItem>[]),
      ) as _i4.Future<List<_i5.IncomeItem>>);

  @override
  _i4.Future<List<_i6.ExpenditureItem>> getExpenditure(String? accessToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExpenditure,
          [accessToken],
        ),
        returnValue: _i4.Future<List<_i6.ExpenditureItem>>.value(
            <_i6.ExpenditureItem>[]),
      ) as _i4.Future<List<_i6.ExpenditureItem>>);

  @override
  _i4.Future<String> addIncome(
    String? accessToken,
    String? name,
    double? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addIncome,
          [
            accessToken,
            name,
            amount,
          ],
        ),
        returnValue: _i4.Future<String>.value(_i7.dummyValue<String>(
          this,
          Invocation.method(
            #addIncome,
            [
              accessToken,
              name,
              amount,
            ],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> addExpense(
    String? accessToken,
    String? name,
    String? category,
    double? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addExpense,
          [
            accessToken,
            name,
            category,
            amount,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.UserProfile> getUserProfile(String? accessToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [accessToken],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_2(
          this,
          Invocation.method(
            #getUserProfile,
            [accessToken],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);
}
